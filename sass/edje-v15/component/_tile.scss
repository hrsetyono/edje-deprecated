// ==============
// EDGE TILE
// ==============

// ------------------------------
// BASE TILE
// - Styling for base framework
// ------------------------------

@mixin _base-tile(
  $size     : 0,
  $gutter   : null,
  $collapse : false,
  $for-base : false,
  $clear    : false) {

  @if $for-base {
    @include display-flex;
    flex-wrap: wrap;
    padding-left: 0;
    width: calc(100% + #{$gutter});
    list-style-type: none;
  }

  @if $gutter {
    margin-right: -($gutter / 2);
    margin-left: -($gutter / 2);
  }

  // Collapse, reduce all margin and padding to 0
  @if $collapse {
    margin-right: 0;
    margin-left: 0;
    padding-right: 0; // override grid's .collapse
    padding-left: 0;
  }

  > li {

    @if $gutter {
      padding-right: ($gutter / 2);
      padding-left: ($gutter / 2);
    }

    @if $collapse {
      padding-right: 0;
      padding-left: 0;
    }

    // Number of tiles per row
    @if $size > 0  {
      width: percentage( 1 / $size );
    }
  }
}

// -----------------------------------
// TILE
// - Styling for external mixin call
// -----------------------------------

@mixin tile (
  $size   : 0,
  $small  : 0,
  $mini   : 0,
  $gutter : null,
  $collapse : false) {

  @include _base-tile(
    $size: $size,
    $gutter: $gutter,
    $collapse: $collapse,
    $clear: true
  );

  @if $small > 0 {
    @include below(small) {
      @include _base-tile($small, $clear:true);
    }
  }

  @if $mini > 0 {
    @include below(mini) {
      @include _base-tile($mini, $clear:true);
    }
  }
}

@if $output-framework {

/* ------
  Tile
------ */

[class*="tile-"] {
  @include _base-tile($gutter:$tile-gutter, $for-base:true);

  &.collapse {
    @include _base-tile($collapse:true);
  }
}

@for $i from 1 through $tile-max {
  .tile-#{$i} {
    @include _base-tile($i);
  }
}

@include below(small) {
  [class*="tile-"] > li {
    width: 100%;
  }

  @for $i from 1 through $tile-max {
    .small-tile-#{$i} {
      @include _base-tile( $i );
    }
  }
}



} // include-block-grid
