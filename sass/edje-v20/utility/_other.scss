// ASSETS ------

@function image-url( $file ) {
  @return url("#{ $_dir-images }/#{ $file }");
}

@function font-url(  $file ) {
  @return url("#{ $_dir-fonts }/#{ $file }");
}


///// Create font sizes in various media query
// Usage:
//   @include font-sizes( ( base:20px, s: 18px ) );
//
// Result:
//   font-size: 20px;
//   @media (max-width:767px) { font-size: 18px; }
//
@mixin font-sizes( $sizes, $context: $font-size ) {
  @each $media, $s in $sizes {
    $size: em( $s, $context );

    @if $media == base {
      font-size: $size;
    }
    @else {
      @media ( below($media) ) { font-size: $size; }
    }
  }
}


///// SVG Encoding
// Usage:
//   background-image: svg-uri('<svg xmlns="http://www.w3.org/2000/svg"> ... </svg>');
// 
// Result:
//   background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E% ... %3C/svg%3E");
@function svg-encode( $svg ) {
  $encoded: '';
  $slice: 2000;
  $index: 0;
  $loops: ceil(str-length($svg) / $slice);

  @for $i from 1 through $loops {
    $chunk: str-slice($svg, $index, $index + $slice - 1);
    $chunk: str-replace($chunk, '"', "'");
    $chunk: str-replace($chunk, '<', '%3C');
    $chunk: str-replace($chunk, '>', '%3E');
    $chunk: str-replace($chunk, '&', '%26');
    $chunk: str-replace($chunk, '#', '%23');
    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }

  @return url("data:image/svg+xml;charset=utf8,#{$encoded}");
}

/// Replace `$search` with `$replace` in `$string`
@function str-replace( $string, $search, $replace: '' ) {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}


//


///// SELECTION -----
// Change the text highlight color
@mixin _text-selection( $bg: $text-highlight ) {
  @if $bg {

    // determine text color
    $color: white;
    @if lightness($bg) > 60 { $color: #222; }

    ::-moz-selection {
      background: $bg;
      text-shadow: none !important;
      color: $color !important;
    }

    ::selection {
      background: $bg;
      text-shadow: none !important;
      color: $color !important;
    }
  }
}

// Clearfix
// Deprecated: Use h( clearfix ) instead
@mixin clearfix {
  &::before,
  &::after {
    content: " ";
    display: table;
  }

  &::after {
    clear: both;
  }
}