$_prefix: null !global;
$_name: null !global;
$_value: null !global;

// Custom loop to add responsiveness
@mixin _loop( $list ) {
  @each $name, $value in $list {
    $_name: $name !global;
    $_value: $value !global;

    // if media query
    @if( map_get( $_media-sizes, $name ) ) {
      $_prefix: #{ $name }\: !global;

      @include below( $name ) {
        // if given map, loop it
        @if length( $value ) == 0 {
          @each $n, $v in $list { @if type-of($v) != map {
            $_name: $n !global;
            $_value: $v !global;
  
            @content;
          } }
        } @else {
          @each $n, $v in $value {
            $_name: $n !global;
            $_value: $v !global;
  
            @content;
          }
        }
      } // below
    } // if
    @else {
      @content;
    }

    $_prefix: null !global;
    $_name: null !global;
    $_value: null !global;
  }
}


@if $output-framework {

///// BACKGROUND /////

// Background color
@include _loop( $background-classes ) {
  .#{ $_prefix }bg-#{ $_name } {
    @if type-of( $_value ) == color {
      background-color: $_value;
    }
    @else {
      background-image: $_value;
    }
  }
}

// Background misc
.bg-cover { background-size: cover; }
.bg-contain { background-size: contain; }
.bg-center { background-position: center center; }


// Opacity
@include _loop( $opacity-classes ) {
  .#{ $_prefix }o-#{ $_name } {
    opacity: #{ $_value }
  }
}

// Overflow (ov)
@include _loop( $overflow-classes ) {
  .#{ $_prefix }ov-#{ $_name } { overflow: $_value; }
  .#{ $_prefix }ovy-#{ $_name } { overflow-y: $_value; }
  .#{ $_prefix }ovx-#{ $_name } { overflow-x: $_value; }
}


///// TYPOGRAPHY /////

// Font Sizes
@include _loop( $font-size-classes ) {
  .#{ $_prefix }fs-#{ $_name } {
    @if type-of( $_value ) == map {
      @include font-sizes( $_value );
    }
    @else {
      font-size: em( $_value );
    }
  }
}

// Color
@include _loop( $color-classes ) {
  .#{ $_prefix }c-#{ $_name } { color: $_value; }
}

// Font Misc
.tt-uppercase { text-transform: uppercase; }
.tt-lowercase { text-transform: lowercase; }
.tt-capitalize { text-transform: capitalize; }
.tt-none { text-transform: none; }

.ta-center { text-align: center; }
.ta-right { text-align: right; }
.ta-left { text-align: left; }

.ff-body { font-family: $font-family; }
.ff-header { font-family: $font-family-header; }

@include _loop( $letter-spacing-classes ) {
  .#{ $_prefix }ls-#{ $_name } {
    letter-spacing: $_value;
  }
}

// Font Weight & Style
.fw-300 { font-weight: 300; }
.fw-400 { font-weight: 400; }
.fw-600 { font-weight: 600; }
.b, .fw-700 { font-weight: 700; }
.fw-900 { font-weight: 900; }

.i { font-style: italic; }
.u, .td-underline { text-decoration: underline; }
.td-strike { text-decoration: line-through; }


///// DISPLAY //////

.d-inlineblock,
.d-iblock,
.d-inline-block { display: inline-block; }
.d-block { display: block; }
.d-none { display: none; }

// Flex wrapper
.flex,
.d-flex { @include display-flex; width: 100%; }
.flex--column { flex-direction: column; }
.flex--column-r,
.flex--column-reverse { flex-direction: column-reverse; }
.flex--row-r,
.flex--row-reverse { flex-direction: row-reverse; }
.flex--wrap { flex-wrap: wrap; }

.ai-start,
.ai-flex-start { align-items: flex-start; }
.ai-end,
.ai-flex-end { align-items: flex-end; }
.ai-center { align-items: center; }
.ai-baseline { align-items: baseline; }
.ai-stretch { align-items: stretch; }

.jc-start,
.jc-flex-start { justify-content: flex-start; }
.jc-end,
.jc-flex-end { justify-content: flex-end; }
.jc-center { justify-content: center; }
.jc-between,
.jc-space-between { justify-content: space-between; }
.jc-around,
.jc-space-around { justify-content: space-around; }


// Flex Items
@include _loop( $flex-classes ) {
  .#{ $_prefix }flex-#{ $_name } {
    flex: #{ $_value };
  }
}

.as-start { align-self: flex-start; }
.as-end { align-self: flex-end; }
.as-center { align-self: center; }
.as-baseline { align-self: baseline; }
.as-stretch { align-self: stretch; }


@include _loop( $order-classes ) {
  .#{ $_prefix }order-#{ $_name } {
    order: $_value;
  }
}

// Visibility
@include above(s) {
  .hide-for-l,
  .show-for-s {
    display: none !important;
  }
}

@include below(s) {
  .hide-for-s,
  .show-for-l {
    display: none !important;
  }
}

@include above(xs) {
  .show-for-xs {
    display: none !important;
  }
}

@include below(xs) {
  .hide-for-xs {
    display: none !important;
  }
}


///// BORDER & SHADOW /////

// Border width
@include _loop( $border-width-classes ) {
  .#{ $_prefix }b-#{ $_name } { border: $_value solid; }
  .#{ $_prefix }bt-#{ $_name } { border-top: $_value solid; }
  .#{ $_prefix }br-#{ $_name } { border-right: $_value solid; } 
  .#{ $_prefix }bb-#{ $_name } { border-bottom: $_value solid; }
  .#{ $_prefix }bl-#{ $_name } { border-left: $_value solid; }
}

.b--dashed { border-style: dashed; }
.b--dotted { border-style: dotted; }

// Border color
@include _loop( $border-color-classes ) {
  .#{ $_prefix }b--#{ $_name } { border-color: $_value; }
}

// Border radius
.br { border-radius: $g-radius; }
.br-circle { border-radius: 50%; }
.br-pill { border-radius: 9999px; }

// Box Shadow
.shadow-0 { box-shadow: $shadow-z0; }
.shadow-1 { box-shadow: $shadow-z1; }
.shadow-2 { box-shadow: $shadow-z2; }
.shadow-3 { box-shadow: $shadow-z3; }


///// POSITION /////

.relative { position: relative; }
.absolute { position: absolute; }
.absolute-fill { position: absolute; top: 0; right: 0; left: 0; bottom: 0; }
.top-0 { top: 0; }
.right-0 { right: 0; }
.bottom-0 { bottom: 0; }
.left-0 { left: 0; }


///// SPACING /////

// Margin
@include _loop( $margin-classes ) {
  .#{ $_prefix }m-#{ $_name } {
    margin: $_value;
  }
  
  .#{ $_prefix }mv-#{ $_name } {
    margin-top: $_value;
    margin-bottom: $_value;
  }

  .#{ $_prefix }mh-#{ $_name } {
    margin-right: $_value;
    margin-left: $_value;
  }

  .#{ $_prefix }mt-#{ $_name } { margin-top: $_value; }
  .#{ $_prefix }mr-#{ $_name } { margin-right: $_value; }
  .#{ $_prefix }mb-#{ $_name } { margin-bottom: $_value; }
  .#{ $_prefix }ml-#{ $_name } { margin-left: $_value; }
}

// Padding
@include _loop( $padding-classes ) {
  .#{ $_prefix }p-#{ $_name } {
    padding: $_value;
  }
  
  .#{ $_prefix }pv-#{ $_name } {
    padding-top: $_value;
    padding-bottom: $_value;
  }

  .#{ $_prefix }ph-#{ $_name } {
    padding-right: $_value;
    padding-left: $_value;
  }

  .#{ $_prefix }pt-#{ $_name } { padding-top: $_value; }
  .#{ $_prefix }pr-#{ $_name } { padding-right: $_value; }
  .#{ $_prefix }pb-#{ $_name } { padding-bottom: $_value; }
  .#{ $_prefix }pl-#{ $_name } { padding-left: $_value; }
}

// Height
@include _loop( $height-classes ) {
  .#{ $_prefix }h-#{ $_name } { height: $_value; }
}

// Width
@include _loop( $width-classes ) {
  .#{ $_prefix }w-#{ $_name } { width: $_value; }
}




// FLOAT

.f-left { float: left; }
.f-right { float: right; }
.clearfix { @include clearfix; }


} // if output